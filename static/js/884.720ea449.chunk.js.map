{"version":3,"file":"static/js/884.720ea449.chunk.js","mappings":"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","sources":["webpack://find_hotel_web/./src/Banner/Banner.module.css?2aee","Banner/Maps.tsx","Banner/Search.tsx","Banner/Banner.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"BannerSection\":\"Banner_BannerSection__npQT3\",\"divContainerBanner\":\"Banner_divContainerBanner__fmBY5\",\"divBanerPhoto\":\"Banner_divBanerPhoto__SsCaK\",\"divTextbaner\":\"Banner_divTextbaner__qDeiq\",\"divPitBaner\":\"Banner_divPitBaner__w1Itq\",\"SearchContainer\":\"Banner_SearchContainer__oJrrF\",\"imgSearch\":\"Banner_imgSearch__+ZyLx\",\"ImgZamina\":\"Banner_ImgZamina__uLzaI\",\"allHotelDivPitBanner\":\"Banner_allHotelDivPitBanner__lbdJ6\",\"text\":\"Banner_text__Msy7L\",\"allHotelDivPitBanner_Text\":\"Banner_allHotelDivPitBanner_Text__E6zu0\",\"hover_input\":\"Banner_hover_input__jt3tX\",\"block_left\":\"Banner_block_left__WWZT3\",\"divPoloska\":\"Banner_divPoloska__DPY3z\",\"banerPhoto\":\"Banner_banerPhoto__r9BFt\",\"divWhen\":\"Banner_divWhen__YaxTW\"};","import React from 'react';\n\ninterface MapModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nconst MapModal: React.FC<MapModalProps> = ({ isOpen, onClose }) => {\n  if (!isOpen) return null;\n\n  const handleOverlayClick = (e: React.MouseEvent) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100vw\",\n        height: \"100vh\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n      }}\n      onClick={handleOverlayClick}\n    >\n      <iframe\n        width=\"90%\"\n        height=\"90%\"\n        style={{ border: 0 }}\n        loading=\"lazy\"\n        allowFullScreen\n        src=\"https://www.google.com/maps?q=48.8588443,2.2943506&z=15&output=embed\"\n      />\n    </div>\n  );\n};\n\nexport default MapModal;","import React from 'react';\nimport styles from './Banner.module.css';\n\ninterface SearchInputProps {\n    inputValue: string;\n    setInputValue: React.Dispatch<React.SetStateAction<string>>;\n    handleSearch: () => void;\n    handleKeyPress: (event: React.KeyboardEvent<HTMLInputElement>) => void;\n    notFound: boolean;\n    t: any;\n}\n\nconst SearchInput: React.FC<SearchInputProps> = ({\n    inputValue,\n    setInputValue,\n    handleSearch,\n    handleKeyPress,\n    notFound,\n    t\n}) => {\n    return (\n        <div className={styles.SearchContainer}>\n            <div className={styles.hover_input}>\n                <input\n                    type=\"text\"\n                    value={inputValue}\n                    onChange={(e) => setInputValue(e.target.value)}\n                    onKeyDown={handleKeyPress}\n                    placeholder={t('Banner.search.text')}\n                />\n                {notFound && <span>{t('Banner.search.span_text')}</span>}\n            </div>\n            \n                <img className={styles.imgSearch} src={`/findHotelWeb/image/sertch.png`} alt=\"delete\" loading=\"lazy\" onClick={handleSearch} />\n        </div>\n    );\n};\n\nexport default SearchInput;","// Banner.tsx\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation } from 'react-router-dom';\nimport styles from './Banner.module.css';\nimport MapModal from './Maps';\nimport SearchInput from './Search';\n\ninterface BannerProps {\n  onSearch: (searchTerm: string) => void;\n}\n\nconst Banner: React.FC<BannerProps> = ({ onSearch }) => {\n  const { t, i18n } = useTranslation();\n  const [isMapOpen, setIsMapOpen] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\"); \n  const [notFound, setNotFound] = useState(false);\n  const [currentRoomNames, setCurrentRoomNames] = useState<{ suite: string; deluxe: string; standard: string; } | null>(null);\n  const location = useLocation();\n  const isAllHotelPage = location.pathname.toLowerCase().includes(\"allhotels\");\n\n  const roomNames: { [key: string]: { suite: string; deluxe: string; standard: string; } } = {\n    en: {\n      suite: \"suite\",\n      deluxe: \"deluxe\",\n      standard: \"standard\",\n    },\n    ua: {  // Змінив uk на ua\n      suite: \"люкс\",\n      deluxe: \"делюкс\",\n      standard: \"стандарт\",\n    }\n  };\n\n  useEffect(() => {\n    const language = i18n.language || \"ua\";\n    setCurrentRoomNames(roomNames[language]);\n  }, [i18n.language]);\n\n  const openMap = () => setIsMapOpen(true);\n  const closeMap = () => setIsMapOpen(false);\n\n  const handleSearch = () => {\n    const normalizedSearch = inputValue.trim().toLowerCase(); // Нормалізація пошукового запиту\n\n    // Якщо currentRoomNames не визначено\n    if (!currentRoomNames) {\n      return;\n    }\n\n    // Якщо пошукове значення порожнє\n    if (normalizedSearch === \"\") {\n      setNotFound(false);\n      return;\n    }\n\n    // Перевірка, чи входить введений запит у назви номерів\n    const found = Object.values(currentRoomNames).some((roomName) =>\n      roomName.toLowerCase().includes(normalizedSearch)\n    );\n    if (!found) {\n      setNotFound(true); // Якщо нічого не знайдено\n    } else {\n      setNotFound(false); // Якщо знайдено\n      onSearch(inputValue); // Передаємо пошуковий запит в батьківську компоненту\n    }\n  };\n\n  const handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n\n  return (\n    <section className={styles.BannerSection}>\n      <div className={styles.divContainerBanner}>\n        <div className={styles.divTextbaner}>\n          <h2>{t('Banner.h2')}<br />\n            {t('Banner.h2_span')}\n          </h2>\n          <p>{t('Banner.p')}<br />\n            {t('Banner.p_span')}\n          </p>\n        </div>\n\n        <div className={styles.divBanerPhoto}>\n          <img src={`/findHotelWeb/image/Banner.webp`} className={styles.banerPhoto} alt=\"banner\" />\n          <img src={`/findHotelWeb/image/Rectangle.webp`} className={styles.ImgZamina} alt=\"img\" />\n        </div>\n        <div className={styles.divPitBaner}>\n          <div className={styles.block_left}>\n            <img onClick={openMap} src={`/findHotelWeb/image/point.png`} alt=\"open map\" />\n            <p>{t('Banner.search.p_1')}<br /><span>{t('Banner.search.span_1')}</span></p>\n          </div>\n\n          <MapModal isOpen={isMapOpen} onClose={closeMap} />\n\n          <div className={styles.divPoloska}><span></span></div>\n          <div className={styles.divWhen}>\n            <SearchInput\n              inputValue={inputValue}\n              setInputValue={setInputValue}\n              handleSearch={handleSearch}\n              handleKeyPress={handleKeyPress}\n              notFound={notFound}\n              t={t}\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Banner;"],"names":["_ref","isOpen","onClose","_jsx","style","position","top","left","width","height","display","justifyContent","alignItems","backgroundColor","onClick","e","target","currentTarget","children","border","loading","allowFullScreen","src","inputValue","setInputValue","handleSearch","handleKeyPress","notFound","t","_jsxs","className","styles","type","value","onChange","onKeyDown","placeholder","alt","onSearch","i18n","useTranslation","isMapOpen","setIsMapOpen","useState","setNotFound","currentRoomNames","setCurrentRoomNames","roomNames","useLocation","pathname","toLowerCase","includes","en","suite","deluxe","standard","ua","useEffect","language","normalizedSearch","trim","Object","values","some","roomName","openMap","MapModal","closeMap","SearchInput","event","key"],"sourceRoot":""}